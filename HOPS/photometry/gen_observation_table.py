import numpy as np
import pandas as pd
from astropy.coordinates import SkyCoord
from astropy import units as u
import data_loader as dl


phot_tbl = dl.data_loader(verbose=False)
obsid_tbl = dl.obsid_from_old_table()
tex_tbl = pd.merge(phot_tbl, obsid_tbl, on="HOPS", how="left")


def nan_is_no_data(inp, val, convert_to=lambda x: x):
    if pd.isnull(val):
        return "\\nodata"
    else:
        val = convert_to(val)
        return inp.format(val)


print("\\begin{longrotatetable}")
print("\\begin{deluxetable*}{rcccccrcrcrccrc}")
print("\\rotate")
print("\\tabletypesize{\\scriptsize}")
print("\\tablecolumns{13}")
print("\\tablewidth{0pt}")
print("\\tablecaption{The HOPS observation sample\\label{tbl:obs}}")
print("\\tablehead{")
print("\\colhead{HOPS} & ")
print("\\colhead{$\\alpha_{J2000}$} &")
print("\\colhead{$\\delta_{J2000}$} &")
print("\\colhead{OBSID\\tablenotemark{a}} &")
print("\\colhead{Group} &")
print("\\colhead{$70\\mu$m} &")
print("\\colhead{flag\\tablenotemark{b}} &")
print("\\colhead{Method\\tablenotemark{c}} &")
print("\\colhead{$100\\mu$m} &")
print("\\colhead{flag\\tablenotemark{b}} &")
print("\\colhead{$160\\mu$m} &")
print("\\colhead{flag\\tablenotemark{b}} &")
print("\\colhead{Method\\tablenotemark{c}} &")
print("\\colhead{Field} &")
print("\\colhead{Observation Date} \\\\")
print("\\colhead{} & ")
print("\\colhead{h:m:s} &")
print("\\colhead{$^{\\rm{o}}:^\\prime:^{\\prime\\prime}$} &")
print("\\colhead{} &")
print("\\colhead{} &")
print("\\colhead{(mJy)} &")
print("\\colhead{} &")
print("\\colhead{} &")
print("\\colhead{(mJy)} &")
print("\\colhead{} &")
print("\\colhead{(mJy)} &")
print("\\colhead{} &")
print("\\colhead{} &")
print("\\colhead{} &")
print("\\colhead{(UT)} \\\\")
print("\\colhead{(1)} & ")
print("\\colhead{(2)} &")
print("\\colhead{(3)} &")
print("\\colhead{(4)} &")
print("\\colhead{(5)} &")
print("\\colhead{(6)} &")
print("\\colhead{(7)} &")
print("\\colhead{(8)} &")
print("\\colhead{(9)} &")
print("\\colhead{(10)} &")
print("\\colhead{(11)} &")
print("\\colhead{(12)} &")
print("\\colhead{(13)} &")
print("\\colhead{(14)} &")
print("\\colhead{(15)}")
print("}")
print("\\startdata")

for i, row in tex_tbl.iterrows():
    coo = SkyCoord(ra=row["RA"] * u.degree, dec=row["Dec"] * u.degree, frame="icrs")
    rastr = "%2.2i:%2.2i:%4.2f" % (coo.ra.hms[0], coo.ra.hms[1], coo.ra.hms[2])
    decstr = "%3.2i:%2.2i:%3.1f" % (coo.dec.dms[0], np.abs(coo.dec.dms[1]), np.abs(coo.dec.dms[2]))
    line = "{} & ".format(nan_is_no_data("{:03d}", row["HOPS"]))
    line = "{} {:11s} & ".format(line, rastr)
    line = "{} {:11s} & ".format(line, decstr)
    line = "{} {} & ".format(line, nan_is_no_data("{:13s}", row["obsids"]))
    line = "{} {} & ".format(line, nan_is_no_data("{:03d}", row["group"], convert_to=int))
    line = "{} {} & ".format(line, nan_is_no_data("{:8.3f}", row["F70"]))
    line = "{} {} & ".format(line, nan_is_no_data("{:1d}", row["f_F70"], convert_to=int))
    line = "{} {} & ".format(line, nan_is_no_data("{:1s}", row["m_F70"]))
    line = "{} {} & ".format(line, nan_is_no_data("{:8.3f}", row["F100"]))
    line = "{} {} & ".format(line, nan_is_no_data("{:1d}", row["f_F100"], convert_to=int))
    line = "{} {} & ".format(line, nan_is_no_data("{:8.3f}", row["F160"]))
    line = "{} {} & ".format(line, nan_is_no_data("{:1d}", row["f_F160"], convert_to=int))
    line = "{} {} & ".format(line, nan_is_no_data("{:1s}", row["m_F160"]))
    line = "{} {} & ".format(line, nan_is_no_data("{:15s}", row["region_old"]))
    line = "{} {} \\\\".format(line, nan_is_no_data("{:20s}", row["obs_date"]))
    print(line)
print("\\enddata")
print("\\tablenotetext{a}{The unique observation identifier for Herschel.}")
print("\\tablenotetext{b}{0=erroneous designation or not observed, 1=measured, 2=upper limit}")
print("\\tablenotetext{c}{A=Aperture photometry, P=PSF-fitted photometry}")
print("\\end{deluxetable*}")
print("\\end{longrotatetable}")
